{
  "associatedLayout": "Level 1",
  "lastChangeTimeStamp": 0,
  "name": "LevelEvents",
  "events": [
    {
      "type": "BuiltinCommonInstructions::Comment",
      "color": {
        "b": 109,
        "g": 230,
        "r": 255,
        "textB": 0,
        "textG": 0,
        "textR": 0
      },
      "comment": "This section contains all logic that applies to all levels (how to handle snapping, movement, etc)"
    },
    {
      "type": "BuiltinCommonInstructions::Standard",
      "conditions": [
        {
          "type": {
            "value": "BuiltinCommonInstructions::Once"
          },
          "parameters": []
        }
      ],
      "actions": [
        {
          "type": {
            "value": "HideLayer"
          },
          "parameters": [
            "",
            "\"Debug\""
          ]
        },
        {
          "type": {
            "value": "SetGlobalVariableAsBoolean"
          },
          "parameters": [
            "debug",
            "False"
          ]
        }
      ]
    },
    {
      "type": "BuiltinCommonInstructions::Standard",
      "conditions": [],
      "actions": [
        {
          "type": {
            "value": "SetCameraCenterY"
          },
          "parameters": [
            "",
            "=",
            "CameraCenterY(\"\", 0)",
            "\"Debug\"",
            "0"
          ]
        },
        {
          "type": {
            "value": "SetCameraCenterX"
          },
          "parameters": [
            "",
            "=",
            "CameraCenterX(\"\", 0)",
            "\"Debug\"",
            "0"
          ]
        },
        {
          "type": {
            "value": "SetCameraCenterX"
          },
          "parameters": [
            "",
            "=",
            "CameraCenterX(\"\", 0)",
            "\"GreyedOut\"",
            "0"
          ]
        },
        {
          "type": {
            "value": "SetCameraCenterY"
          },
          "parameters": [
            "",
            "=",
            "CameraCenterY(\"\", 0)",
            "\"GreyedOut\"",
            "0"
          ]
        }
      ]
    },
    {
      "type": "BuiltinCommonInstructions::Standard",
      "conditions": [
        {
          "type": {
            "value": "CompareTimer"
          },
          "parameters": [
            "",
            "\"actionTimeout\"",
            ">=",
            ".05"
          ]
        }
      ],
      "actions": [
        {
          "type": {
            "value": "ResetTimer"
          },
          "parameters": [
            "",
            "\"actionTimeout\""
          ]
        },
        {
          "type": {
            "value": "SetGlobalVariableAsBoolean"
          },
          "parameters": [
            "canDoAction",
            "True"
          ]
        }
      ]
    },
    {
      "colorB": 228,
      "colorG": 176,
      "colorR": 74,
      "creationTime": 0,
      "name": "Collision",
      "source": "",
      "type": "BuiltinCommonInstructions::Group",
      "events": [
        {
          "type": "BuiltinCommonInstructions::Standard",
          "conditions": [
            {
              "type": {
                "value": "CollisionNP"
              },
              "parameters": [
                "PlayerSprite",
                "CollisionDetect",
                "",
                "",
                ""
              ]
            }
          ],
          "actions": [
            {
              "type": {
                "value": "SeparateFromObjects"
              },
              "parameters": [
                "PlayerSprite",
                "CollisionDetect",
                ""
              ]
            }
          ]
        },
        {
          "type": "BuiltinCommonInstructions::Standard",
          "conditions": [
            {
              "type": {
                "value": "CollisionNP"
              },
              "parameters": [
                "PlayerSprite",
                "Door",
                "",
                "",
                ""
              ]
            },
            {
              "type": {
                "value": "ObjectVariableAsBoolean"
              },
              "parameters": [
                "Door",
                "open",
                ""
              ]
            }
          ],
          "actions": [
            {
              "type": {
                "value": "SeparateFromObjects"
              },
              "parameters": [
                "PlayerSprite",
                "Door",
                ""
              ]
            }
          ]
        },
        {
          "type": "BuiltinCommonInstructions::Standard",
          "conditions": [
            {
              "type": {
                "value": "CollisionNP"
              },
              "parameters": [
                "electricitySprite",
                "Door",
                "",
                "",
                ""
              ]
            }
          ],
          "actions": [
            {
              "type": {
                "value": "OpacityCapability::OpacityBehavior::SetValue"
              },
              "parameters": [
                "Door",
                "Opacity",
                "=",
                "50"
              ]
            },
            {
              "type": {
                "value": "SetObjectVariableAsBoolean"
              },
              "parameters": [
                "Door",
                "open",
                "True"
              ]
            }
          ]
        },
        {
          "type": "BuiltinCommonInstructions::Standard",
          "conditions": [
            {
              "type": {
                "inverted": true,
                "value": "CollisionNP"
              },
              "parameters": [
                "electricitySprite",
                "Door",
                "",
                "",
                ""
              ]
            }
          ],
          "actions": [
            {
              "type": {
                "value": "OpacityCapability::OpacityBehavior::SetValue"
              },
              "parameters": [
                "Door",
                "Opacity",
                "=",
                "255"
              ]
            },
            {
              "type": {
                "value": "SetObjectVariableAsBoolean"
              },
              "parameters": [
                "Door",
                "open",
                "False"
              ]
            }
          ]
        }
      ],
      "parameters": []
    },
    {
      "colorB": 228,
      "colorG": 176,
      "colorR": 74,
      "creationTime": 0,
      "name": "Draggable",
      "source": "",
      "type": "BuiltinCommonInstructions::Group",
      "events": [
        {
          "type": "BuiltinCommonInstructions::Comment",
          "color": {
            "b": 109,
            "g": 230,
            "r": 255,
            "textB": 0,
            "textG": 0,
            "textR": 0
          },
          "comment": "Set default values"
        },
        {
          "type": "BuiltinCommonInstructions::Standard",
          "conditions": [
            {
              "type": {
                "value": "BuiltinCommonInstructions::Once"
              },
              "parameters": []
            }
          ],
          "actions": [
            {
              "type": {
                "value": "EffectCapability::EffectBehavior::EnableEffect"
              },
              "parameters": [
                "HoldableWireTurn",
                "Effect",
                "\"Draggable\"",
                ""
              ]
            },
            {
              "type": {
                "value": "ActivateBehavior"
              },
              "parameters": [
                "Fuse",
                "Draggable",
                ""
              ]
            },
            {
              "type": {
                "value": "ActivateBehavior"
              },
              "parameters": [
                "HoldableWireLR",
                "Draggable",
                ""
              ]
            },
            {
              "type": {
                "value": "ActivateBehavior"
              },
              "parameters": [
                "HoldableWireTurn",
                "Draggable",
                ""
              ]
            },
            {
              "type": {
                "value": "EffectCapability::EffectBehavior::EnableEffect"
              },
              "parameters": [
                "Fuse",
                "Effect",
                "\"Draggable\"",
                ""
              ]
            },
            {
              "type": {
                "value": "EffectCapability::EffectBehavior::EnableEffect"
              },
              "parameters": [
                "HoldableWireLR",
                "Effect",
                "\"Draggable\"",
                ""
              ]
            }
          ]
        },
        {
          "type": "BuiltinCommonInstructions::Comment",
          "color": {
            "b": 109,
            "g": 230,
            "r": 255,
            "textB": 0,
            "textG": 0,
            "textR": 0
          },
          "comment": "If you're within 120 pixels of something, you can pick it up"
        },
        {
          "type": "BuiltinCommonInstructions::Standard",
          "conditions": [
            {
              "type": {
                "value": "Distance"
              },
              "parameters": [
                "PlayerSprite",
                "Fuse",
                "120",
                ""
              ]
            }
          ],
          "actions": [
            {
              "type": {
                "value": "ActivateBehavior"
              },
              "parameters": [
                "Fuse",
                "Draggable",
                "yes"
              ]
            },
            {
              "type": {
                "value": "EffectCapability::EffectBehavior::EnableEffect"
              },
              "parameters": [
                "Fuse",
                "Effect",
                "\"Draggable\"",
                "yes"
              ]
            }
          ]
        },
        {
          "type": "BuiltinCommonInstructions::Standard",
          "conditions": [
            {
              "type": {
                "value": "Distance"
              },
              "parameters": [
                "PlayerSprite",
                "HoldableWireLR",
                "120",
                ""
              ]
            }
          ],
          "actions": [
            {
              "type": {
                "value": "ActivateBehavior"
              },
              "parameters": [
                "HoldableWireLR",
                "Draggable",
                "yes"
              ]
            },
            {
              "type": {
                "value": "EffectCapability::EffectBehavior::EnableEffect"
              },
              "parameters": [
                "HoldableWireLR",
                "Effect",
                "\"Draggable\"",
                "yes"
              ]
            }
          ]
        },
        {
          "type": "BuiltinCommonInstructions::Standard",
          "conditions": [
            {
              "type": {
                "value": "Distance"
              },
              "parameters": [
                "PlayerSprite",
                "HoldableWireTurn",
                "120",
                ""
              ]
            }
          ],
          "actions": [
            {
              "type": {
                "value": "ActivateBehavior"
              },
              "parameters": [
                "HoldableWireTurn",
                "Draggable",
                "yes"
              ]
            },
            {
              "type": {
                "value": "EffectCapability::EffectBehavior::EnableEffect"
              },
              "parameters": [
                "HoldableWireTurn",
                "Effect",
                "\"Draggable\"",
                "yes"
              ]
            }
          ]
        },
        {
          "type": "BuiltinCommonInstructions::Comment",
          "color": {
            "b": 109,
            "g": 230,
            "r": 255,
            "textB": 0,
            "textG": 0,
            "textR": 0
          },
          "comment": "If you're more than 120 pixels away, or the object is in a greyed out room, make it undraggable"
        },
        {
          "type": "BuiltinCommonInstructions::Standard",
          "conditions": [
            {
              "type": {
                "value": "BuiltinCommonInstructions::Or"
              },
              "parameters": [],
              "subInstructions": [
                {
                  "type": {
                    "inverted": true,
                    "value": "Distance"
                  },
                  "parameters": [
                    "PlayerSprite",
                    "Fuse",
                    "120",
                    ""
                  ]
                },
                {
                  "type": {
                    "value": "BuiltinCommonInstructions::And"
                  },
                  "parameters": [],
                  "subInstructions": [
                    {
                      "type": {
                        "value": "CollisionNP"
                      },
                      "parameters": [
                        "Fuse",
                        "NoDraggingParts",
                        "",
                        "",
                        ""
                      ]
                    },
                    {
                      "type": {
                        "value": "ObjectVariableAsBoolean"
                      },
                      "parameters": [
                        "NoDraggingParts",
                        "enabled",
                        "True"
                      ]
                    }
                  ]
                }
              ]
            }
          ],
          "actions": [
            {
              "type": {
                "value": "ActivateBehavior"
              },
              "parameters": [
                "Fuse",
                "Draggable",
                "no"
              ]
            },
            {
              "type": {
                "value": "EffectCapability::EffectBehavior::EnableEffect"
              },
              "parameters": [
                "Fuse",
                "Effect",
                "\"Draggable\"",
                "no"
              ]
            }
          ]
        },
        {
          "type": "BuiltinCommonInstructions::Standard",
          "conditions": [
            {
              "type": {
                "value": "BuiltinCommonInstructions::Or"
              },
              "parameters": [],
              "subInstructions": [
                {
                  "type": {
                    "inverted": true,
                    "value": "Distance"
                  },
                  "parameters": [
                    "PlayerSprite",
                    "HoldableWireLR",
                    "120",
                    ""
                  ]
                },
                {
                  "type": {
                    "value": "BuiltinCommonInstructions::And"
                  },
                  "parameters": [],
                  "subInstructions": [
                    {
                      "type": {
                        "value": "CollisionNP"
                      },
                      "parameters": [
                        "HoldableWireLR",
                        "NoDraggingParts",
                        "",
                        "",
                        ""
                      ]
                    },
                    {
                      "type": {
                        "value": "ObjectVariableAsBoolean"
                      },
                      "parameters": [
                        "NoDraggingParts",
                        "enabled",
                        "True"
                      ]
                    }
                  ]
                }
              ]
            }
          ],
          "actions": [
            {
              "type": {
                "value": "ActivateBehavior"
              },
              "parameters": [
                "HoldableWireLR",
                "Draggable",
                "no"
              ]
            },
            {
              "type": {
                "value": "EffectCapability::EffectBehavior::EnableEffect"
              },
              "parameters": [
                "HoldableWireLR",
                "Effect",
                "\"Draggable\"",
                "no"
              ]
            }
          ]
        },
        {
          "type": "BuiltinCommonInstructions::Standard",
          "conditions": [
            {
              "type": {
                "value": "BuiltinCommonInstructions::Or"
              },
              "parameters": [],
              "subInstructions": [
                {
                  "type": {
                    "inverted": true,
                    "value": "Distance"
                  },
                  "parameters": [
                    "PlayerSprite",
                    "HoldableWireTurn",
                    "120",
                    ""
                  ]
                },
                {
                  "type": {
                    "value": "BuiltinCommonInstructions::And"
                  },
                  "parameters": [],
                  "subInstructions": [
                    {
                      "type": {
                        "value": "CollisionNP"
                      },
                      "parameters": [
                        "HoldableWireTurn",
                        "NoDraggingParts",
                        "",
                        "",
                        ""
                      ]
                    },
                    {
                      "type": {
                        "value": "ObjectVariableAsBoolean"
                      },
                      "parameters": [
                        "NoDraggingParts",
                        "enabled",
                        "True"
                      ]
                    }
                  ]
                }
              ]
            }
          ],
          "actions": [
            {
              "type": {
                "value": "ActivateBehavior"
              },
              "parameters": [
                "HoldableWireTurn",
                "Draggable",
                "no"
              ]
            },
            {
              "type": {
                "value": "EffectCapability::EffectBehavior::EnableEffect"
              },
              "parameters": [
                "HoldableWireTurn",
                "Effect",
                "\"Draggable\"",
                "no"
              ]
            }
          ]
        },
        {
          "type": "BuiltinCommonInstructions::Comment",
          "color": {
            "b": 109,
            "g": 230,
            "r": 255,
            "textB": 0,
            "textG": 0,
            "textR": 0
          },
          "comment": "Prevent items from being able to be placed in greyed out rooms"
        },
        {
          "type": "BuiltinCommonInstructions::Standard",
          "conditions": [
            {
              "type": {
                "value": "CollisionNP"
              },
              "parameters": [
                "HoldableWireLR",
                "NoDraggingParts",
                "",
                "",
                ""
              ]
            },
            {
              "type": {
                "value": "ObjectVariableAsBoolean"
              },
              "parameters": [
                "NoDraggingParts",
                "enabled",
                "True"
              ]
            },
            {
              "type": {
                "value": "DraggableBehavior::Dragged"
              },
              "parameters": [
                "HoldableWireLR",
                "Draggable"
              ]
            }
          ],
          "actions": [
            {
              "type": {
                "value": "SeparateFromObjects"
              },
              "parameters": [
                "HoldableWireLR",
                "NoDraggingParts",
                ""
              ]
            }
          ]
        },
        {
          "type": "BuiltinCommonInstructions::Standard",
          "conditions": [
            {
              "type": {
                "value": "CollisionNP"
              },
              "parameters": [
                "HoldableWireTurn",
                "NoDraggingParts",
                "",
                "",
                ""
              ]
            },
            {
              "type": {
                "value": "ObjectVariableAsBoolean"
              },
              "parameters": [
                "NoDraggingParts",
                "enabled",
                "True"
              ]
            },
            {
              "type": {
                "value": "DraggableBehavior::Dragged"
              },
              "parameters": [
                "HoldableWireTurn",
                "Draggable"
              ]
            }
          ],
          "actions": [
            {
              "type": {
                "value": "SeparateFromObjects"
              },
              "parameters": [
                "HoldableWireLR",
                "NoDraggingParts",
                ""
              ]
            }
          ]
        },
        {
          "type": "BuiltinCommonInstructions::Comment",
          "color": {
            "b": 109,
            "g": 230,
            "r": 255,
            "textB": 0,
            "textG": 0,
            "textR": 0
          },
          "comment": "Make rooms become not greyed out when player enters"
        },
        {
          "type": "BuiltinCommonInstructions::Standard",
          "conditions": [
            {
              "type": {
                "value": "CollisionNP"
              },
              "parameters": [
                "PlayerSprite",
                "NoDraggingParts",
                "",
                "",
                ""
              ]
            }
          ],
          "actions": [
            {
              "type": {
                "value": "SetObjectVariableAsBoolean"
              },
              "parameters": [
                "NoDraggingParts",
                "enabled",
                ""
              ]
            },
            {
              "type": {
                "value": "Cache"
              },
              "parameters": [
                "NoDraggingParts"
              ]
            }
          ]
        },
        {
          "type": "BuiltinCommonInstructions::Standard",
          "conditions": [
            {
              "type": {
                "inverted": true,
                "value": "CollisionNP"
              },
              "parameters": [
                "PlayerSprite",
                "NoDraggingParts",
                "",
                "",
                ""
              ]
            }
          ],
          "actions": [
            {
              "type": {
                "value": "SetObjectVariableAsBoolean"
              },
              "parameters": [
                "NoDraggingParts",
                "enabled",
                "True"
              ]
            },
            {
              "type": {
                "value": "Montre"
              },
              "parameters": [
                "NoDraggingParts",
                ""
              ]
            }
          ]
        },
        {
          "type": "BuiltinCommonInstructions::Comment",
          "color": {
            "b": 109,
            "g": 230,
            "r": 255,
            "textB": 0,
            "textG": 0,
            "textR": 0
          },
          "comment": "Prevent objects from being able to be placed in walls"
        },
        {
          "type": "BuiltinCommonInstructions::Standard",
          "conditions": [
            {
              "type": {
                "value": "CollisionNP"
              },
              "parameters": [
                "HoldableWireLR",
                "CollisionDetect",
                "",
                "",
                ""
              ]
            }
          ],
          "actions": [
            {
              "type": {
                "value": "SeparateFromObjects"
              },
              "parameters": [
                "HoldableWireLR",
                "CollisionDetect",
                ""
              ]
            }
          ]
        },
        {
          "type": "BuiltinCommonInstructions::Standard",
          "conditions": [
            {
              "type": {
                "value": "CollisionNP"
              },
              "parameters": [
                "HoldableWireTurn",
                "CollisionDetect",
                "",
                "",
                ""
              ]
            }
          ],
          "actions": [
            {
              "type": {
                "value": "SeparateFromObjects"
              },
              "parameters": [
                "HoldableWireTurn",
                "CollisionDetect",
                ""
              ]
            }
          ]
        },
        {
          "type": "BuiltinCommonInstructions::Standard",
          "conditions": [
            {
              "type": {
                "value": "CollisionNP"
              },
              "parameters": [
                "Fuse",
                "CollisionDetect",
                "",
                "",
                ""
              ]
            }
          ],
          "actions": [
            {
              "type": {
                "value": "SeparateFromObjects"
              },
              "parameters": [
                "Fuse",
                "CollisionDetect",
                ""
              ]
            }
          ]
        }
      ],
      "parameters": []
    },
    {
      "colorB": 228,
      "colorG": 176,
      "colorR": 74,
      "creationTime": 0,
      "name": "Debug",
      "source": "",
      "type": "BuiltinCommonInstructions::Group",
      "events": [
        {
          "type": "BuiltinCommonInstructions::Standard",
          "conditions": [
            {
              "type": {
                "value": "GlobalVariableAsBoolean"
              },
              "parameters": [
                "debug",
                "True"
              ]
            }
          ],
          "actions": [
            {
              "type": {
                "value": "ShowLayer"
              },
              "parameters": [
                "",
                "\"Debug\""
              ]
            }
          ],
          "events": [
            {
              "type": "BuiltinCommonInstructions::Standard",
              "conditions": [],
              "actions": []
            }
          ]
        }
      ],
      "parameters": []
    },
    {
      "colorB": 228,
      "colorG": 176,
      "colorR": 74,
      "creationTime": 0,
      "name": "Snapping",
      "source": "",
      "type": "BuiltinCommonInstructions::Group",
      "events": [
        {
          "type": "BuiltinCommonInstructions::Comment",
          "color": {
            "b": 109,
            "g": 230,
            "r": 255,
            "textB": 0,
            "textG": 0,
            "textR": 0
          },
          "comment": "If you let go of an item, snap to neareset block. If it lands on a block that overlapping with would cause problems, move to random location.\n"
        },
        {
          "type": "BuiltinCommonInstructions::Standard",
          "conditions": [
            {
              "type": {
                "value": "CollisionNP"
              },
              "parameters": [
                "Fuse",
                "WireFuseHolder",
                "",
                "",
                ""
              ]
            }
          ],
          "actions": [
            {
              "type": {
                "value": "SetCenter"
              },
              "parameters": [
                "Fuse",
                "=",
                "WireFuseHolder.CenterX()",
                "=",
                "WireFuseHolder.CenterY()"
              ]
            }
          ]
        },
        {
          "type": "BuiltinCommonInstructions::Standard",
          "conditions": [
            {
              "type": {
                "value": "DraggableBehavior::Dropped"
              },
              "parameters": [
                "HoldableWireLR",
                "Draggable"
              ]
            }
          ],
          "actions": [
            {
              "type": {
                "value": "SetCenter"
              },
              "parameters": [
                "HoldableWireLR",
                "=",
                "int((HoldableWireLR.X())/32)*32",
                "=",
                "int((HoldableWireLR.Y())/32)*32"
              ]
            }
          ],
          "events": [
            {
              "type": "BuiltinCommonInstructions::Standard",
              "conditions": [
                {
                  "type": {
                    "value": "BuiltinCommonInstructions::Or"
                  },
                  "parameters": [],
                  "subInstructions": [
                    {
                      "type": {
                        "value": "CollisionNP"
                      },
                      "parameters": [
                        "HoldableWireLR",
                        "WireFuseHolder",
                        "",
                        "",
                        ""
                      ]
                    }
                  ]
                }
              ],
              "actions": [
                {
                  "type": {
                    "value": "MettreXY"
                  },
                  "parameters": [
                    "HoldableWireLR",
                    "=",
                    "HoldableWireLR.CenterX()+Random(128)",
                    "=",
                    "HoldableWireLR.CenterY()+ Random(128)"
                  ]
                }
              ]
            }
          ]
        },
        {
          "type": "BuiltinCommonInstructions::Standard",
          "conditions": [
            {
              "type": {
                "value": "DraggableBehavior::Dropped"
              },
              "parameters": [
                "HoldableWireTurn",
                "Draggable"
              ]
            }
          ],
          "actions": [
            {
              "type": {
                "value": "SetCenter"
              },
              "parameters": [
                "HoldableWireTurn",
                "=",
                "int((HoldableWireTurn.X())/32)*32",
                "=",
                "int((HoldableWireTurn.Y())/32)*32"
              ]
            }
          ],
          "events": [
            {
              "type": "BuiltinCommonInstructions::Standard",
              "conditions": [
                {
                  "type": {
                    "value": "BuiltinCommonInstructions::Or"
                  },
                  "parameters": [],
                  "subInstructions": [
                    {
                      "type": {
                        "value": "CollisionNP"
                      },
                      "parameters": [
                        "HoldableWireTurn",
                        "WireFuseHolder",
                        "",
                        "",
                        ""
                      ]
                    }
                  ]
                }
              ],
              "actions": [
                {
                  "type": {
                    "value": "MettreXY"
                  },
                  "parameters": [
                    "HoldableWireTurn",
                    "=",
                    "HoldableWireTurn.CenterX()+Random(128)",
                    "=",
                    "HoldableWireTurn.CenterY()+ Random(128)"
                  ]
                }
              ]
            }
          ]
        }
      ],
      "parameters": []
    },
    {
      "colorB": 228,
      "colorG": 176,
      "colorR": 74,
      "creationTime": 0,
      "name": "Element Logic",
      "source": "",
      "type": "BuiltinCommonInstructions::Group",
      "events": [
        {
          "type": "BuiltinCommonInstructions::Standard",
          "conditions": [
            {
              "type": {
                "value": "CollisionNP"
              },
              "parameters": [
                "WireFuseHolder",
                "Fuse",
                "",
                "",
                ""
              ]
            }
          ],
          "actions": [
            {
              "type": {
                "value": "SetObjectVariableAsBoolean"
              },
              "parameters": [
                "WireFuseHolder",
                "hasFuse",
                "True"
              ]
            }
          ]
        },
        {
          "type": "BuiltinCommonInstructions::Standard",
          "conditions": [
            {
              "type": {
                "inverted": true,
                "value": "CollisionNP"
              },
              "parameters": [
                "PathObjects",
                "Fuse",
                "",
                "",
                ""
              ]
            }
          ],
          "actions": [
            {
              "type": {
                "value": "SetObjectVariableAsBoolean"
              },
              "parameters": [
                "WireFuseHolder",
                "hasFuse",
                "False"
              ]
            }
          ]
        }
      ],
      "parameters": []
    },
    {
      "colorB": 228,
      "colorG": 176,
      "colorR": 74,
      "creationTime": 0,
      "name": "ElectricityCircleMovement",
      "source": "",
      "type": "BuiltinCommonInstructions::Group",
      "events": [
        {
          "type": "BuiltinCommonInstructions::Standard",
          "conditions": [
            {
              "type": {
                "value": "KeyPressed"
              },
              "parameters": [
                "",
                "w"
              ]
            },
            {
              "type": {
                "value": "GlobalVariableAsBoolean"
              },
              "parameters": [
                "canDoAction",
                "True"
              ]
            }
          ],
          "actions": [
            {
              "type": {
                "value": "ModVarScene"
              },
              "parameters": [
                "elecPrevXPos",
                "=",
                "electricitySprite.CenterX()"
              ]
            },
            {
              "type": {
                "value": "ModVarScene"
              },
              "parameters": [
                "elecPrevYPos",
                "=",
                "electricitySprite.CenterY()"
              ]
            },
            {
              "type": {
                "value": "MettreY"
              },
              "parameters": [
                "electricitySprite",
                "=",
                "electricitySprite.CenterY() - 8"
              ]
            },
            {
              "type": {
                "value": "SetGlobalVariableAsBoolean"
              },
              "parameters": [
                "canDoAction",
                "False"
              ]
            },
            {
              "type": {
                "value": "ResetTimer"
              },
              "parameters": [
                "",
                "\"actionTimeout\""
              ]
            }
          ]
        },
        {
          "type": "BuiltinCommonInstructions::Standard",
          "conditions": [
            {
              "type": {
                "value": "KeyPressed"
              },
              "parameters": [
                "",
                "a"
              ]
            },
            {
              "type": {
                "value": "GlobalVariableAsBoolean"
              },
              "parameters": [
                "canDoAction",
                "True"
              ]
            }
          ],
          "actions": [
            {
              "type": {
                "value": "ModVarScene"
              },
              "parameters": [
                "elecPrevXPos",
                "=",
                "electricitySprite.CenterX()"
              ]
            },
            {
              "type": {
                "value": "ModVarScene"
              },
              "parameters": [
                "elecPrevYPos",
                "=",
                "electricitySprite.CenterY()"
              ]
            },
            {
              "type": {
                "value": "MettreX"
              },
              "parameters": [
                "electricitySprite",
                "=",
                "electricitySprite.CenterX() - 8"
              ]
            },
            {
              "type": {
                "value": "SetGlobalVariableAsBoolean"
              },
              "parameters": [
                "canDoAction",
                "False"
              ]
            },
            {
              "type": {
                "value": "ResetTimer"
              },
              "parameters": [
                "",
                "\"actionTimeout\""
              ]
            }
          ]
        },
        {
          "type": "BuiltinCommonInstructions::Standard",
          "conditions": [
            {
              "type": {
                "value": "KeyPressed"
              },
              "parameters": [
                "",
                "s"
              ]
            },
            {
              "type": {
                "value": "GlobalVariableAsBoolean"
              },
              "parameters": [
                "canDoAction",
                "True"
              ]
            }
          ],
          "actions": [
            {
              "type": {
                "value": "ModVarScene"
              },
              "parameters": [
                "elecPrevYPos",
                "=",
                "electricitySprite.CenterY()"
              ]
            },
            {
              "type": {
                "value": "ModVarScene"
              },
              "parameters": [
                "elecPrevXPos",
                "=",
                "electricitySprite.CenterX()"
              ]
            },
            {
              "type": {
                "value": "MettreY"
              },
              "parameters": [
                "electricitySprite",
                "=",
                "electricitySprite.CenterY() + 8"
              ]
            },
            {
              "type": {
                "value": "SetGlobalVariableAsBoolean"
              },
              "parameters": [
                "canDoAction",
                "False"
              ]
            },
            {
              "type": {
                "value": "ResetTimer"
              },
              "parameters": [
                "",
                "\"actionTimeout\""
              ]
            }
          ]
        },
        {
          "type": "BuiltinCommonInstructions::Standard",
          "conditions": [
            {
              "type": {
                "value": "KeyPressed"
              },
              "parameters": [
                "",
                "d"
              ]
            },
            {
              "type": {
                "value": "GlobalVariableAsBoolean"
              },
              "parameters": [
                "canDoAction",
                "True"
              ]
            }
          ],
          "actions": [
            {
              "type": {
                "value": "ModVarScene"
              },
              "parameters": [
                "elecPrevXPos",
                "=",
                "electricitySprite.CenterX()"
              ]
            },
            {
              "type": {
                "value": "ModVarScene"
              },
              "parameters": [
                "elecPrevYPos",
                "=",
                "electricitySprite.CenterY()"
              ]
            },
            {
              "type": {
                "value": "MettreX"
              },
              "parameters": [
                "electricitySprite",
                "=",
                "electricitySprite.CenterX() + 8"
              ]
            },
            {
              "type": {
                "value": "SetGlobalVariableAsBoolean"
              },
              "parameters": [
                "canDoAction",
                "False"
              ]
            },
            {
              "type": {
                "value": "ResetTimer"
              },
              "parameters": [
                "",
                "\"actionTimeout\""
              ]
            }
          ]
        },
        {
          "type": "BuiltinCommonInstructions::Comment",
          "color": {
            "b": 109,
            "g": 230,
            "r": 255,
            "textB": 0,
            "textG": 0,
            "textR": 0
          },
          "comment": "If sprite leaves any of the electrical objects, snap back to the last time it was touching one."
        },
        {
          "type": "BuiltinCommonInstructions::Standard",
          "conditions": [
            {
              "type": {
                "value": "BuiltinCommonInstructions::Or"
              },
              "parameters": [],
              "subInstructions": [
                {
                  "type": {
                    "inverted": true,
                    "value": "CollisionNP"
                  },
                  "parameters": [
                    "electricitySprite",
                    "PathObjects",
                    "",
                    "",
                    ""
                  ]
                },
                {
                  "type": {
                    "value": "BuiltinCommonInstructions::And"
                  },
                  "parameters": [],
                  "subInstructions": [
                    {
                      "type": {
                        "value": "CollisionNP"
                      },
                      "parameters": [
                        "electricitySprite",
                        "WireFuseHolder",
                        "",
                        "",
                        ""
                      ]
                    },
                    {
                      "type": {
                        "value": "ObjectVariableAsBoolean"
                      },
                      "parameters": [
                        "WireFuseHolder",
                        "hasFuse",
                        ""
                      ]
                    }
                  ]
                }
              ]
            }
          ],
          "actions": [
            {
              "type": {
                "value": "SetCenter"
              },
              "parameters": [
                "electricitySprite",
                "=",
                "Variable(elecPrevXPos)",
                "=",
                "Variable(elecPrevYPos)"
              ]
            }
          ]
        },
        {
          "colorB": 228,
          "colorG": 176,
          "colorR": 74,
          "creationTime": 0,
          "name": "Custom mouse",
          "source": "",
          "type": "BuiltinCommonInstructions::Group",
          "events": [
            {
              "type": "BuiltinCommonInstructions::Standard",
              "conditions": [
                {
                  "type": {
                    "value": "DepartScene"
                  },
                  "parameters": [
                    ""
                  ]
                }
              ],
              "actions": [
                {
                  "type": {
                    "value": "Create"
                  },
                  "parameters": [
                    "",
                    "Mouse",
                    "MouseX()",
                    "MouseY()",
                    ""
                  ]
                }
              ]
            },
            {
              "type": "BuiltinCommonInstructions::Standard",
              "conditions": [],
              "actions": [
                {
                  "type": {
                    "value": "MettreXY"
                  },
                  "parameters": [
                    "Mouse",
                    "=",
                    "MouseX()",
                    "=",
                    "MouseY()"
                  ]
                },
                {
                  "type": {
                    "value": "CacheSouris"
                  },
                  "parameters": [
                    ""
                  ]
                }
              ]
            }
          ],
          "parameters": []
        }
      ],
      "parameters": []
    },
    {
      "colorB": 228,
      "colorG": 176,
      "colorR": 74,
      "creationTime": 0,
      "name": "Player Animation",
      "source": "",
      "type": "BuiltinCommonInstructions::Group",
      "events": [],
      "parameters": []
    },
    {
      "disabled": true,
      "type": "BuiltinCommonInstructions::Standard",
      "conditions": [
        {
          "type": {
            "value": "KeyPressed"
          },
          "parameters": [
            "",
            "Up"
          ]
        }
      ],
      "actions": [
        {
          "type": {
            "value": "AnimatableCapability::AnimatableBehavior::SetName"
          },
          "parameters": [
            "PlayerSprite",
            "Animation",
            "=",
            "\"Player1Up\""
          ]
        }
      ]
    },
    {
      "disabled": true,
      "type": "BuiltinCommonInstructions::Standard",
      "conditions": [
        {
          "type": {
            "value": "KeyPressed"
          },
          "parameters": [
            "",
            "Left"
          ]
        }
      ],
      "actions": [
        {
          "type": {
            "value": "AnimatableCapability::AnimatableBehavior::SetName"
          },
          "parameters": [
            "PlayerSprite",
            "Animation",
            "=",
            "\"Player1Left\""
          ]
        }
      ]
    },
    {
      "disabled": true,
      "type": "BuiltinCommonInstructions::Standard",
      "conditions": [
        {
          "type": {
            "value": "KeyPressed"
          },
          "parameters": [
            "",
            "Down"
          ]
        }
      ],
      "actions": [
        {
          "type": {
            "value": "AnimatableCapability::AnimatableBehavior::SetName"
          },
          "parameters": [
            "PlayerSprite",
            "Animation",
            "=",
            "\"Player1Down\""
          ]
        }
      ]
    },
    {
      "disabled": true,
      "type": "BuiltinCommonInstructions::Standard",
      "conditions": [
        {
          "type": {
            "value": "KeyPressed"
          },
          "parameters": [
            "",
            "Right"
          ]
        }
      ],
      "actions": [
        {
          "type": {
            "value": "AnimatableCapability::AnimatableBehavior::SetName"
          },
          "parameters": [
            "PlayerSprite",
            "Animation",
            "=",
            "\"Player1Right\""
          ]
        }
      ]
    }
  ]
}